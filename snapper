#!/bin/sh

# Source config file if it exists and validate required settings
if [ -f ~/.config/snapper.conf ]; then
  source ~/.config/snapper.conf
fi

if [ -z $SNAPPER_DIR ]; then
  echo "SNAPPER_DIR not defined...defaulting to ~/.snapper"
  SNAPPER_DIR=$HOME/.snapper
fi

if [ -z $SNAPPER_HOST ]; then
   SNAPPER_HOST="http://s3.amazonaws.com/$SNAPPER_BUCKET"
fi

if [ -z $SNAPPER_BUCKET ]; then
   echo "Error: SNAPPER_BUCKET not defined. Exiting."
   exit 1
fi

if [ -z $SNAPPER_AWS_KEY ]; then
   echo "Error: SNAPPER_AWS_KEY not defined. Exiting."
   exit 1
fi

if [ -z $SNAPPER_AWS_KEY ]; then
   echo "Error: SNAPPER_AWS_SECRET not defined. Exiting."
   exit 1
fi

# Ensure snapper temp drectory exists
mkdir -p $SNAPPER_DIR

# Generate snap file name
SNAP_FILENAME="$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 12 | head -n 1).png"

# Allow user to specify area of screen to capture
eval $(slop)

# If screenshot was cancelled exit
if [ $Cancel == true ]; then
  echo "Cancelled"
  exit
fi

# Use imagemagick to take and crop screenshot based on slop output
import -window root -crop $G $SNAPPER_DIR/$SNAP_FILENAME

# Upload file to S3
s3cmd --force --access_key=$SNAPPER_AWS_KEY --secret_key=$SNAPPER_AWS_SECRET put $SNAPPER_DIR/$SNAP_FILENAME s3://$SNAPPER_BUCKET &>/dev/null

# Copy s3 url to clipboard
echo "$SNAPPER_HOST/$SNAP_FILENAME" | xsel --clipboard --input

echo "$SNAPPER_DIR/$SNAP_FILENAME"

# Send desktop notification
notify-send -i $SNAPPER_DIR/$SNAP_FILENAME "Snap in Clipboard"
